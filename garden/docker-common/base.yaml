services:
  # 🏗️ Base environment anchor
  base_environment: &base_environment
    DOCKER_API_VERSION: ${docker_api_version} # https://github.com/docker/cli/issues/2533
    TZ: ${timezone}

  # 🧱 Base configurations
  base: &base
    restart: unless-stopped
    hostname: ${nas_name}
    security_opt: [no-new-privileges:true]
    environment:
      <<: *base_environment

  # 🧭 Host networking config
  host_network: &host_network
    network_mode: host

  # 🌐 User-defined network config
  eden_network: &eden_network
    networks:
      - eden

  # 🔒 Read-only config
  readonly: &readonly
    read_only: true

  # 👤 Container user
  container_user: &container_user
    user: ${uid}:${gid}

  # 👤 Environment user
  environment_user: &environment_user
    PUID: ${uid}
    PGID: ${gid}

  # 🧢 Drop capabilities
  no_caps: &no_caps
    cap_drop: [all]

  # 🏷️ Private labels
  private_labels: &private_labels
    labels:
      caddy_0.@denied.not_0: "remote_ip ${private_ip_range}"
      caddy_0.abort: "@denied"

  # 🧩 Services
  generic:
    <<: [*base, *eden_network]

  genericAsContainerUser:
    <<: [*base, *eden_network, *container_user]

  genericReadOnlyAsContainerUserNoCap:
    <<: [*base, *eden_network, *readonly, *container_user, *no_caps]

  genericOnHostReadOnlyAsContainerUserNoCap:
    <<: [*base, *host_network, *readonly, *container_user, *no_caps]

  privateReadOnly:
    <<: [*base, *eden_network, *readonly, *private_labels]

  privateReadOnlyAsContainerUserNoCap:
    <<:
      [
        *base,
        *eden_network,
        *readonly,
        *container_user,
        *no_caps,
        *private_labels,
      ]

  privateAsContainerUserNoCap:
    <<: [*base, *eden_network, *container_user, *no_caps, *private_labels]

  privateAsEnvironmentUser:
    <<: [*base, *eden_network, *private_labels]
    environment:
      <<: [*base_environment, *environment_user]
