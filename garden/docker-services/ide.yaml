services:
  code-server-dotnet:
    container_name: code-server-dotnet
    image: ptr727/vscode-server-dotnetcore:latest
    extends:
      file: ../docker-common/base.yaml
      service: private
    environment:
      PUID: ${uid}
      PGID: ${gid}
      FILE__PASSWORD: /run/secrets/interface_pw
      DEFAULT_WORKSPACE: /config/workspace
    volumes:
      - ${host_data_config_path}/codeserver:/config
    secrets:
      - interface_pw
    labels:
      caddy_0: ${private_protocol}code.${private_domain}
      caddy_0.reverse_proxy: "{{upstreams 8443}}"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:latest
    user: ${uid}:${gid}
    extends:
      file: ../docker-common/base.yaml
      service: generic
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD_FILE: /run/secrets/interface_pw
      POSTGRES_DB: nasi
      PGPORT: 6432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d nasi -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ${host_data_config_path}/postgres/data:/var/lib/postgresql/data
      - ${host_data_config_path}/postgres/scripts:/docker-entrypoint-initdb.d/
    secrets:
      - interface_pw
    labels:
      caddy_0.layer4.:6432:
      caddy_0.layer4.:6432.@a: "remote_ip ${private_ip_range}"
      caddy_0.layer4.:6432.route: "@a"
      caddy_0.layer4.:6432.route.proxy: "{{ upstreams 6432 }}"

  coredns:
    container_name: coredns
    image: coredns/coredns
    user: ${uid}:${gid}
    extends:
      file: ../docker-common/base.yaml
      service: generic
    volumes:
      - ${host_data_config_path}/coredns/:/coredns-config/
    command: -conf coredns-config/Corefile
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 5533:53/udp
