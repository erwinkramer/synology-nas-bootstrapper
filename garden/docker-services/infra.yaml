networks:
  eden:
    driver: bridge
    name: eden
    ipam:
      config:
        - subnet: 172.21.0.0/16

services:
  # for dozzle log errors in caddy, it's expected. See: https://github.com/amir20/dozzle/issues/2844
  caddy:
    container_name: based
    build:
      context: ../docker-file
      dockerfile: caddy-docker-proxy.dockerfile
    extends:
      file: ../docker-common/base.yaml
      service: generic
    environment:
      CADDY_INGRESS_NETWORKS: eden
    ports:
      - 80:80
      - 443:443
      - 6432:6432 #postgres container
      - 50777:50777 #qbittorrent container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${host_data_config_path}:/data
    labels:
      com.centurylinklabs.watchtower.enable: false
      caddy_0: ${public_protocol}based.${public_domain}
      caddy_0.reverse_proxy: ${private_ip}:5000 #built-in DSM portal outside of docker
      caddy_1: ${private_protocol}based.${private_domain}
      caddy_1.reverse_proxy: ${private_ip}:5000 #built-in DSM portal outside of docker
      caddy_2: (tinyauth_forwarder)
      caddy_2.forward_auth: tinyauth:3000
      caddy_2.forward_auth.uri: /api/auth

  tinyauth:
    container_name: auth
    image: ghcr.io/steveiliop56/tinyauth:latest
    extends:
      file: ../docker-common/base.yaml
      service: public
    secrets:
      - github_client_secret
      - tinyauth_cookie_secret
    environment:
      DISABLE_CONTINUE: true
      APP_URL: ${public_protocol}auth.${public_domain}
      SECRET_FILE: /run/secrets/tinyauth_cookie_secret #used to encrypt the cookies, content has to be 32 characters
      OAUTH_WHITELIST: ${github_users_csv}
      GITHUB_CLIENT_ID: ${github_client_id}
      GITHUB_CLIENT_SECRET_FILE: /run/secrets/github_client_secret
      LOG_LEVEL: 1 #0 for debug, 1 for info
    labels:
      caddy_0: ${public_protocol}auth.${public_domain}
      caddy_0.reverse_proxy: "{{upstreams 3000}}"

  duckdns:
    container_name: duckdns
    image: linuxserver/duckdns:latest
    extends:
      file: ../docker-common/base.yaml
      service: generic
    environment:
      PUID: ${uid}
      PGID: ${gid}
      SUBDOMAINS: ${public_ddns_subdomain}
      TOKEN: ${public_ddns_token}
      UPDATE_IP: ipv4 #uses external Cloudflare whoami service to detect public IP addresses

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    extends:
      file: ../docker-common/base.yaml
      service: private
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      caddy_0: ${private_protocol}dozzle.${private_domain}
      caddy_0.reverse_proxy: "{{upstreams 8080}}"
      caddy_0.import: tinyauth_forwarder *

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    extends:
      file: ../docker-common/base.yaml
      service: generic
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_SCHEDULE: 0 30 * * * * # at 30 minutes past the hour, every hour
      WATCHTOWER_TIMEOUT: 25 # seconds
